name: Deploy Terraform

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
  workflow_dispatch: # Allows manual triggering

permissions:
  id-token: write # Required for OIDC authentication
  contents: read  # Required to checkout the code

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest

    env:
      TF_VAR_s3_bucket_name: ${{ vars.S3_BUCKET_NAME }}
      TF_VAR_aws_region: ${{ vars.REGION }}
      TF_VAR_lambda_function_name: ${{ vars.LAMBDA_NAME }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::544067237869:role/GithubActionsRole
          aws-region: ${{ vars.REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false
        working-directory: ./terraform

      - name: Terraform Apply
        # This step only runs on pushes to the 'main' branch
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        working-directory: ./terraform

  notify:
    name: Telegram Notification
    runs-on: ubuntu-latest
    needs: terraform
    if: always()
    
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            Terraform Deployment Status
            
            Repository: `${{ github.repository }}`
            Branch: `${{ github.ref_name }}`
            Commit: `${{ github.sha }}`
            Status: `${{ needs.terraform.result }}`
            
            Workflow: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}